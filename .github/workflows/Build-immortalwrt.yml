name: 🔧 ImmortalWrt AutoBuilder

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC午夜自动运行
  workflow_dispatch:     # 允许手动触发

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.config.outputs.matrix) }}

    steps:
    - name: 🛬 Checkout Repository
      uses: actions/checkout@v4

    - name: ⚙️ Load Configuration
      id: config
      run: |
        # 读取配置文件
        DEVICES=$(jq -r '.devices[]' config/devices.json)
        VERSION=$(jq -r '.version' config/version.json)
        
        # 生成构建矩阵
        MATRIX=$(jq -n '{include: []}')
        for DEVICE in $DEVICES; do
          MATRIX=$(echo $MATRIX | jq \
            --arg device "$DEVICE" \
            --arg version "$VERSION" \
            '.include += [{
              device: $device,
              version: $version
            }]')
        done
        
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 🔧 Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential libncurses5-dev zlib1g-dev \
          gawk git gettext libssl-dev xsltproc wget unzip python3

    - name: ⬇️ Download ImageBuilder
      run: |
        IB_URL="https://downloads.immortalwrt.org/releases/${{ matrix.version }}/targets/${{ matrix.target }}/immortalwrt-imagebuilder-${{ matrix.version }}-${{ matrix.target }}.Linux-x86_64.tar.xz"
        wget -O imagebuilder.tar.xz "$IB_URL"
        tar -xJf imagebuilder.tar.xz
        mv immortalwrt-imagebuilder-* imagebuilder

    - name: 📦 Prepare Packages
      id: packages
      run: |
        # 检查是否存在自定义包列表
        if [ -f "config/packages_${{ matrix.device }}.txt" ]; then
          echo "Using custom packages for ${{ matrix.device}}"
          PACKAGES=$(tr '\n' ' ' < "config/packages_${{ matrix.device }}.txt")
        else
          echo "Using default packages"
          PACKAGES=$(tr '\n' ' ' < "config/default_packages.txt")
        fi
        echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV

    - name: 🔨 Build Firmware
      run: |
        cd imagebuilder
        make image PROFILE="${{ matrix.device }}" \
          PACKAGES="$PACKAGES" \
          FILES="../files/"  # 可选的定制文件目录

    - name: 🗜️ Archive Artifacts
      run: |
        mkdir -p artifacts/${{ matrix.device }}
        cp imagebuilder/bin/targets/*/*/*.bin artifacts/${{ matrix.device }}/
        echo "DEVICE=${{ matrix.device }}" >> $GITHUB_ENV

    - name: 🚀 Upload Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/${{ env.DEVICE }}/*.bin
        tag_name: build-${{ github.run_id }}-${{ env.DEVICE }}
        name: "Build ${{ github.run_id }} (${{ env.DEVICE }})"
        body: "ImmortalWrt ${{ matrix.version }} for ${{ env.DEVICE }}"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
